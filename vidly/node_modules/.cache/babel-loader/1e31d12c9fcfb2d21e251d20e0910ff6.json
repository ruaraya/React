{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ruben\\\\Documents\\\\React\\\\vidly\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Ruben\\\\Documents\\\\React\\\\vidly\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Ruben\\\\Documents\\\\React\\\\vidly\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ruben\\\\Documents\\\\React\\\\vidly\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ruben\\\\Documents\\\\React\\\\vidly\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ruben\\\\Documents\\\\React\\\\vidly\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Ruben\\\\Documents\\\\React\\\\vidly\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ruben\\\\Documents\\\\React\\\\vidly\\\\src\\\\components\\\\movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport \"../../node_modules/react-bootstrap-table/css/react-bootstrap-table.css\";\nimport Like from \"./common/like\";\nimport Pagination from \"./common/pagination\";\n\nvar Movies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movies, _Component);\n\n  function Movies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movies: getMovies(),\n      currentPage: 1,\n      pageSize: 4\n    };\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentPage: page\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"handleLike\",\n    value: function handleLike(movie) {\n      var movies = _toConsumableArray(this.state.movies);\n\n      var index = movies.indexOf(movie);\n      movies[index] = _objectSpread({}, movies[index]);\n      movies[index].liked = !movie.liked;\n      this.setState({\n        movies: movies\n      });\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(movie) {\n      var movies = this.state.movies.filter(function (c) {\n        return c._id !== movie._id;\n      });\n      this.setState({\n        movies: movies\n      });\n    }\n  }, {\n    key: \"countMovies\",\n    value: function countMovies() {\n      var numMovies = this.state.movies.length;\n\n      if (numMovies > 0) {\n        return \"Showing \" + numMovies + \" movies in the database\";\n      } else {\n        return \"No movies in the database\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          movies = _this$state.movies,\n          currentPage = _this$state.currentPage,\n          pageSize = _this$state.pageSize;\n      var count = movies.length; // Logic for displaying movies\n\n      /*\r\n      const indexOfLastMovie = currentPage * moviesPerPage;\r\n      const indexOfFirstMovie = indexOfLastMovie - moviesPerPage;\r\n      const currentMovies = movies.slice(indexOfFirstMovie, indexOfLastMovie);\r\n        const renderMovies = currentMovies.map((movie, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <td>{movie.title}</td>\r\n            <td>{movie.genre.name}</td>\r\n            <td>{movie.numberInStock}</td>\r\n            <td>{movie.dailyRentalRate}</td>\r\n            <td>\r\n              <Like liked={movie.liked} onClick={() => this.handleLike(movie)} />\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-danger btn-sm\"\r\n                onClick={() => this.handleDelete(movie)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        );\r\n        \r\n      });\r\n        const pageNumbers = [];\r\n      for (let i = 1; i <= Math.ceil(movies.length / moviesPerPage); i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n        const renderPageNumbers = pageNumbers.map(number => {\r\n        return (\r\n          <li\r\n            className=\"page-item\"\r\n            key={number}\r\n            id={number}\r\n            onClick={() => this.handleClick(number)}\r\n          >\r\n            <a className=\"page-link\">{number}</a>\r\n          </li>\r\n        );\r\n      });\r\n      */\n\n      return React.createElement(\"main\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.countMovies()), React.createElement(\"div\", {\n        className: \"Movies\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Genre\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Stock\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Rate\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(Pagination, {\n        itemsCount: count,\n        pageSize: pageSize,\n        currentPage: currentPage,\n        onPageChange: this.handlePageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Movies;\n}(Component);\n\nexport default Movies;","map":{"version":3,"sources":["C:\\Users\\Ruben\\Documents\\React\\vidly\\src\\components\\movies.jsx"],"names":["React","Component","getMovies","Like","Pagination","Movies","state","movies","currentPage","pageSize","handlePageChange","page","setState","movie","index","indexOf","liked","filter","c","_id","numMovies","length","count","countMovies"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport \"../../node_modules/react-bootstrap-table/css/react-bootstrap-table.css\";\r\nimport Like from \"./common/like\";\r\nimport Pagination from \"./common/pagination\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: getMovies(),\r\n    currentPage: 1,\r\n    pageSize: 4\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleLike(movie) {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movie.liked;\r\n    this.setState({ movies });\r\n  }\r\n\r\n  handleDelete(movie) {\r\n    const movies = this.state.movies.filter(c => c._id !== movie._id);\r\n    this.setState({ movies });\r\n  }\r\n\r\n  countMovies() {\r\n    const numMovies = this.state.movies.length;\r\n    if (numMovies > 0) {\r\n      return \"Showing \" + numMovies + \" movies in the database\";\r\n    } else {\r\n      return \"No movies in the database\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movies, currentPage, pageSize } = this.state;\r\n    const count = movies.length;\r\n    // Logic for displaying movies\r\n    /*\r\n    const indexOfLastMovie = currentPage * moviesPerPage;\r\n    const indexOfFirstMovie = indexOfLastMovie - moviesPerPage;\r\n    const currentMovies = movies.slice(indexOfFirstMovie, indexOfLastMovie);\r\n\r\n    const renderMovies = currentMovies.map((movie, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{movie.title}</td>\r\n          <td>{movie.genre.name}</td>\r\n          <td>{movie.numberInStock}</td>\r\n          <td>{movie.dailyRentalRate}</td>\r\n          <td>\r\n            <Like liked={movie.liked} onClick={() => this.handleLike(movie)} />\r\n          </td>\r\n          <td>\r\n            <button\r\n              className=\"btn btn-danger btn-sm\"\r\n              onClick={() => this.handleDelete(movie)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n      \r\n    });\r\n\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(movies.length / moviesPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    const renderPageNumbers = pageNumbers.map(number => {\r\n      return (\r\n        <li\r\n          className=\"page-item\"\r\n          key={number}\r\n          id={number}\r\n          onClick={() => this.handleClick(number)}\r\n        >\r\n          <a className=\"page-link\">{number}</a>\r\n        </li>\r\n      );\r\n    });\r\n    */\r\n\r\n    return (\r\n      <main className=\"container\">\r\n        <h4>{this.countMovies()}</h4>\r\n        <div className=\"Movies\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Title</th>\r\n                <th>Genre</th>\r\n                <th>Stock</th>\r\n                <th>Rate</th>\r\n                <th />\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>{}</tbody>\r\n          </table>\r\n          <Pagination\r\n            itemsCount={count}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}