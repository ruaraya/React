{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ruben\\\\Documents\\\\React\\\\vidly\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Ruben\\\\Documents\\\\React\\\\vidly\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Ruben\\\\Documents\\\\React\\\\vidly\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ruben\\\\Documents\\\\React\\\\vidly\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ruben\\\\Documents\\\\React\\\\vidly\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ruben\\\\Documents\\\\React\\\\vidly\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Ruben\\\\Documents\\\\React\\\\vidly\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ruben\\\\Documents\\\\React\\\\vidly\\\\src\\\\components\\\\movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport \"../../node_modules/react-bootstrap-table/css/react-bootstrap-table.css\";\nimport Like from \"./common/like\";\n\nvar Movies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movies, _Component);\n\n  function Movies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movies: getMovies(),\n      currentPage: 1,\n      moviesPerPage: 3\n    };\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"buttonFormatter\",\n    value: function buttonFormatter(cell, row) {\n      var _this2 = this;\n\n      return React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.handleDelete(row);\n        },\n        className: \"btn btn-danger btn-sm m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Delete\");\n    }\n  }, {\n    key: \"showGenre\",\n    value: function showGenre(cell, row) {\n      return cell.name;\n    }\n  }, {\n    key: \"heartFormatter\",\n    value: function heartFormatter(cell, row) {\n      var _this3 = this;\n\n      return React.createElement(Like, {\n        liked: row.liked,\n        onClick: function onClick() {\n          return _this3.handleLike(row);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      this.setState({\n        currentPage: Number(event.target.id)\n      });\n    }\n  }, {\n    key: \"handleLike\",\n    value: function handleLike(row) {\n      var movies = _toConsumableArray(this.state.movies);\n\n      var index = movies.indexOf(row);\n      movies[index] = _objectSpread({}, movies[index]);\n      movies[index].liked = !row.liked;\n      this.setState({\n        movies: movies\n      });\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(row) {\n      //console.log(\"Movie id : \" + row._id);\n      var movies = this.state.movies.filter(function (c) {\n        return c._id !== row._id;\n      });\n      this.setState({\n        movies: movies\n      });\n      this.countMovies();\n    }\n  }, {\n    key: \"countMovies\",\n    value: function countMovies() {\n      var numMovies = this.state.movies.length;\n\n      if (numMovies > 0) {\n        return \"Showing \" + numMovies + \" movies in the database\";\n      } else {\n        return \"No movies in the database\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          movies = _this$state.movies,\n          currentPage = _this$state.currentPage,\n          moviesPerPage = _this$state.moviesPerPage; // Logic for displaying todos\n\n      var indexOfLastMovie = currentPage * moviesPerPage;\n      var indexOfFirstMovie = indexOfLastMovie - moviesPerPage;\n      var currentMovies = movies.slice(indexOfFirstMovie, indexOfLastMovie);\n      var renderMovies = currentMovies.map(function (movie, index) {\n        return React.createElement(TableHeaderColumn, {\n          isKey: true,\n          key: index,\n          dataField: \"_id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"ID\");\n      }); // Logic for displaying page numbers\n\n      var pageNumbers = [];\n\n      for (var i = 1; i <= Math.ceil(movies.length / moviesPerPage); i++) {\n        pageNumbers.push(i);\n      }\n\n      var renderPageNumbers = pageNumbers.map(function (number) {\n        return React.createElement(\"li\", {\n          key: number,\n          id: number,\n          onClick: _this4.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, number);\n      });\n      return React.createElement(\"main\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.countMovies()), React.createElement(\"div\", {\n        className: \"Movies\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.movies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, renderMovies), React.createElement(\"ul\", {\n        id: \"page-numbers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, renderPageNumbers))));\n    }\n  }]);\n\n  return Movies;\n}(Component);\n\nexport default Movies;","map":{"version":3,"sources":["C:\\Users\\Ruben\\Documents\\React\\vidly\\src\\components\\movies.jsx"],"names":["React","Component","getMovies","BootstrapTable","TableHeaderColumn","Like","Movies","state","movies","currentPage","moviesPerPage","cell","row","handleDelete","name","liked","handleLike","event","setState","Number","target","id","index","indexOf","filter","c","_id","countMovies","numMovies","length","indexOfLastMovie","indexOfFirstMovie","currentMovies","slice","renderMovies","map","movie","pageNumbers","i","Math","ceil","push","renderPageNumbers","number","handleClick"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport \"../../node_modules/react-bootstrap-table/css/react-bootstrap-table.css\";\r\nimport Like from \"./common/like\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: getMovies(),\r\n    currentPage: 1,\r\n    moviesPerPage: 3\r\n  };\r\n\r\n  buttonFormatter(cell, row) {\r\n    return (\r\n      <button\r\n        onClick={() => {\r\n          this.handleDelete(row);\r\n        }}\r\n        className=\"btn btn-danger btn-sm m-2\"\r\n      >\r\n        Delete\r\n      </button>\r\n    );\r\n  }\r\n\r\n  showGenre(cell, row) {\r\n    return cell.name;\r\n  }\r\n\r\n  heartFormatter(cell, row) {\r\n    return <Like liked={row.liked} onClick={() => this.handleLike(row)} />;\r\n  }\r\n\r\n  handleClick(event) {\r\n    this.setState({\r\n      currentPage: Number(event.target.id)\r\n    });\r\n  }\r\n\r\n  handleLike(row) {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(row);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !row.liked;\r\n    this.setState({ movies });\r\n  }\r\n\r\n  handleDelete(row) {\r\n    //console.log(\"Movie id : \" + row._id);\r\n    const movies = this.state.movies.filter(c => c._id !== row._id);\r\n    this.setState({ movies });\r\n    this.countMovies();\r\n  }\r\n\r\n  countMovies() {\r\n    const numMovies = this.state.movies.length;\r\n    if (numMovies > 0) {\r\n      return \"Showing \" + numMovies + \" movies in the database\";\r\n    } else {\r\n      return \"No movies in the database\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movies, currentPage, moviesPerPage } = this.state;\r\n\r\n    // Logic for displaying todos\r\n    const indexOfLastMovie = currentPage * moviesPerPage;\r\n    const indexOfFirstMovie = indexOfLastMovie - moviesPerPage;\r\n    const currentMovies = movies.slice(indexOfFirstMovie, indexOfLastMovie);\r\n\r\n    const renderMovies = currentMovies.map((movie, index) => {\r\n      return (\r\n        <TableHeaderColumn isKey key={index} dataField=\"_id\">\r\n          ID\r\n        </TableHeaderColumn>\r\n      );\r\n    });\r\n\r\n    // Logic for displaying page numbers\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(movies.length / moviesPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    const renderPageNumbers = pageNumbers.map(number => {\r\n      return (\r\n        <li key={number} id={number} onClick={this.handleClick}>\r\n          {number}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <main className=\"container\">\r\n        <h4>{this.countMovies()}</h4>\r\n        <div className=\"Movies\">\r\n          <BootstrapTable data={this.state.movies}>\r\n            <ul>{renderMovies}</ul>\r\n            <ul id=\"page-numbers\">{renderPageNumbers}</ul>\r\n          </BootstrapTable>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}